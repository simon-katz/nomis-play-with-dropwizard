- See http://dropwizard.readthedocs.org/en/latest/getting-started.html
  - that was the starting point for this.


- Dropwizard "wiring":

  - How does it find the yml file?
    The file name is a parameter that's passed in.

  - How does it know your service class?
    That's where your `main` method is.

  - How does it know the configuration class?
    (It creates an instance of this and passes it to your `run` method.)
    I guess it knows this because the service class is parameterised with the
    configuration class.

  - Duplication of info across yml file and config files. (Names.)

  - Duplication of existence of resource classes and adding them to the environment.
    (In Clojure, maybe a bit like calling a function to create a handler rather than
     having an inline handler.)

  - How does it call `Saying.g etId` and `Saying.g etContent`?
    - And Plop.
    - Ah...
      "It uses the Java Bean standard for the id and content properties."
      "This allows Jackson to serialize it to the JSON we need."

- Compare `Saying` to what you would have in Clojure, and cry.

- Compare resources and adding resources to the environment with the equivalent
  Clojure, and cry.
  And the health check.

- GET etc method names can be anything. Interesting.

TODO:
